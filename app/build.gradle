import com.android.build.gradle.internal.tasks.FinalizeBundleTask

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id "io.sentry.android.gradle" version "3.14.0"
}

android {
    compileSdk 34
    namespace "com.techyourchance.android"
    defaultConfig {
        applicationId "com.techyourchance.android"
        minSdkVersion 26
        targetSdkVersion 34
        versionCode 11
        versionName "1.0.10"
        vectorDrawables.useSupportLibrary = true
    }

    sentry {
        ignoredBuildTypes = ["debug"]
    }

    signingConfigs {
        release {
            def projectPropsFile = rootProject.file("release.properties")
            if (projectPropsFile.exists()) {
                Properties props = new Properties()
                props.load(new FileInputStream(projectPropsFile))

                storeFile file(props['KEYSTORE_FILE'])
                storePassword props['STORE_PASSWORD']
                keyAlias props['KEY_ALIAS']
                keyPassword props['KEY_PASSWORD']
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            buildConfigField("String", "SENTRY_DSN", "\"\"")
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'gson.pro', 'retrofit2.pro'
            signingConfig signingConfigs.release

            def sentryProperties = new Properties()
            sentryProperties.load(new FileInputStream(rootProject.file("sentry.properties")))
            buildConfigField("String", "SENTRY_DSN", sentryProperties['dsn'])
        }
        
        applicationVariants.all { variant ->

            def artifactName = "tyc-${variant.name}-${variant.versionCode}-v${variant.versionName}"

            def buildTypeSuffix = variant.name.toLowerCase().contains("debug") ? " Debug" : ""
            mergedFlavor.manifestPlaceholders = [appName: "TechYourChance${buildTypeSuffix}"]

            // Rename APKs
            variant.outputs.all {
                outputFileName = "${artifactName}.apk"
            }

            // Rename AABs
            tasks.named("sign${variant.name.capitalize()}Bundle", FinalizeBundleTask) {
                File file = finalBundleFile.asFile.get()
                File finalFile = new File(file.parentFile, "${artifactName}.aab")
                finalBundleFile.set(finalFile)
            }
        }

    }

    buildFeatures {
        compose = true
        buildConfig = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.3"
    }


    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    externalNativeBuild {
        cmake {
            path file('CMakeLists.txt')
        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(":database")
    
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation 'com.google.android.material:material:1.11.0'

    // Graphs and charts
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    
    // Jetpack Compose
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation "androidx.compose.material3:material3:1.1.2"
    implementation 'androidx.compose.material:material:1.5.4'
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"

    // Dependency injection
    implementation "com.google.dagger:dagger:2.47"
    kapt "com.google.dagger:dagger-compiler:2.47"

    // Fragment navigation
    implementation 'com.ncapdevi:frag-nav:3.3.0'

    // Dialogs
    implementation 'com.techyourchance:dialoghelper:1.0.1'

    // Image loading
    implementation 'com.github.bumptech.glide:glide:4.12.0'

    // Networking
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.1'
    implementation 'com.squareup.okhttp3:okhttp-bom:4.12.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'

    // Event bus
    implementation 'org.greenrobot:eventbus:3.2.0'

    // Settings (shared pref)
    implementation 'com.techyourchance:settingshelper:1.1.0'

    // Logging
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // biometric auth
    implementation "androidx.biometric:biometric-ktx:1.2.0-alpha05"

    // Background work
    implementation "androidx.work:work-runtime-ktx:2.8.1"

    // Json serialization
    implementation 'com.google.code.gson:gson:2.10.1'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'io.kotest:kotest-assertions-core:5.7.2'
    testImplementation "io.mockk:mockk:1.13.7"

}
